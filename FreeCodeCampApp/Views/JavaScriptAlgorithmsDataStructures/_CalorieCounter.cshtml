<div class="modal-header">
    <h5 class="modal-title" id="projectCalorieCounter">Learn Form Validation by Building a Calorie Counter</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<div class="modal-body project">
    <div class="alert alert-info small" role="alert">
        This project works with regular expressions, template literals, the addEventListener() method, and more.
        <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#codeExample" aria-expanded="false" aria-controls="codeExample">
            View Code
        </button>
    </div>
    <div class="custom-calorie-counter">
        <h1>Calorie Counter</h1>
        <div class="container-calorie-counter">
            <form id="calorie-counter">
                <label for="budget">Budget</label>
                <input type="number"
                       min="0"
                       id="budget"
                       placeholder="Daily calorie budget"
                       required />
                <fieldset id="breakfast">
                    <legend>Breakfast</legend>
                    <div class="input-container"></div>
                </fieldset>
                <fieldset id="lunch">
                    <legend>Lunch</legend>
                    <div class="input-container"></div>
                </fieldset>
                <fieldset id="dinner">
                    <legend>Dinner</legend>
                    <div class="input-container"></div>
                </fieldset>
                <fieldset id="snacks">
                    <legend>Snacks</legend>
                    <div class="input-container"></div>
                </fieldset>
                <fieldset id="exercise">
                    <legend>Exercise</legend>
                    <div class="input-container"></div>
                </fieldset>
                <div class="controls">
                    <span>
                        <label for="entry-dropdown">Add food or exercise:</label>
                        <select id="entry-dropdown" name="options">
                            <option value="breakfast" selected>Breakfast</option>
                            <option value="lunch">Lunch</option>
                            <option value="dinner">Dinner</option>
                            <option value="snacks">Snacks</option>
                            <option value="exercise">Exercise</option>
                        </select>
                        <button type="button" id="add-entry" class="button-project">Add Entry</button>
                    </span>
                </div>
                <div>
                    <button type="submit" class="button-project">
                        Calculate Remaining Calories
                    </button>
                    <button type="button" id="clear" class="button-project">Clear</button>
                </div>
            </form>
            <div id="output" class="output hide"></div>
        </div>
    </div>
    <div class="collapse mt-2" id="codeExample">
        <div class="card card-body bg-light text-monospace">
            <pre>
                <code>
const calorieCounter = document.getElementById('calorie-counter');
const budgetNumberInput = document.getElementById('budget');
const entryDropdown = document.getElementById('entry-dropdown');
const addEntryButton = document.getElementById('add-entry');
const clearButton = document.getElementById('clear');
const output = document.getElementById('output');
let isError = false;

function cleanInputString(str) {
    const regex = /[+-\s]/g;
    return str.replace(regex, '');
}

function isInvalidInput(str) {
    const regex = /\d+e\d+/i;
    return str.match(regex);
}

function addEntry() {
    const targetInputContainer = document.querySelector(`#${entryDropdown.value} .input-container`);
    const entryNumber = targetInputContainer.querySelectorAll('input[type="text"]').length + 1;
    const HTMLString = `
        <label for="${entryDropdown.value}-${entryNumber}-name">Entry ${entryNumber} Name</label>
        <input type="text" id="${entryDropdown.value}-${entryNumber}-name" placeholder="Name" />
        <label for="${entryDropdown.value}-${entryNumber}-calories">Entry ${entryNumber} Calories</label>
        <input type="number"
                min="0"
                id="${entryDropdown.value}-${entryNumber}-calories"
                placeholder="Calories" />`;
    targetInputContainer.insertAdjacentHTML('beforeend', HTMLString);
}

function calculateCalories(e) {
    e.preventDefault();
    isError = false;

    const breakfastNumberInputs = document.querySelectorAll("#breakfast input[type='number']");
    const lunchNumberInputs = document.querySelectorAll("#lunch input[type='number']");
    const dinnerNumberInputs = document.querySelectorAll("#dinner input[type='number']");
    const snacksNumberInputs = document.querySelectorAll("#snacks input[type='number']");
    const exerciseNumberInputs = document.querySelectorAll("#exercise input[type='number']");

    const breakfastCalories = getCaloriesFromInputs(breakfastNumberInputs);
    const lunchCalories = getCaloriesFromInputs(lunchNumberInputs);
    const dinnerCalories = getCaloriesFromInputs(dinnerNumberInputs);
    const snacksCalories = getCaloriesFromInputs(snacksNumberInputs);
    const exerciseCalories = getCaloriesFromInputs(exerciseNumberInputs);
    const budgetCalories = getCaloriesFromInputs([budgetNumberInput]);

    if (isError) {
        return;
    }

    const consumedCalories = breakfastCalories + lunchCalories + dinnerCalories + snacksCalories;
    const remainingCalories = budgetCalories - consumedCalories + exerciseCalories;
    const surplusOrDeficit = remainingCalories < 0 ? 'Surplus' : 'Deficit';
    output.innerHTML = `
        <span class="${surplusOrDeficit.toLowerCase()}">${Math.abs(remainingCalories)} Calorie ${surplusOrDeficit}</span>
        <hr>
        <p>${budgetCalories} Calories Budgeted</p>
        <p>${consumedCalories} Calories Consumed</p>
        <p>${exerciseCalories} Calories Burned</p>
    `;

    output.classList.remove('hide');
}

function getCaloriesFromInputs(list) {
    let calories = 0;

    for (const item of list) {
        const currVal = cleanInputString(item.value);
        const invalidInputMatch = isInvalidInput(currVal);

        if (invalidInputMatch) {
            alert(`Invalid Input: ${invalidInputMatch[0]}`);
            isError = true;
            return null;
        }
        calories += Number(currVal);
    }
    return calories;
}

function clearForm() {
    const inputContainers = Array.from(document.querySelectorAll('.input-container'));

    for (const container of inputContainers) {
        container.innerHTML = '';
    }

    budgetNumberInput.value = '';
    output.innerText = '';
    output.classList.add('hide');
}

addEntryButton.addEventListener("click", addEntry);
calorieCounter.addEventListener("submit", calculateCalories);
clearButton.addEventListener("click", clearForm);
                </code>
            </pre>
        </div>
    </div>
</div>

<style>
    :root {
        --light-grey: #f5f6f7;
        --dark-blue: #0a0a23;
        --fcc-blue: #1b1b32;
        --light-yellow: #fecc4c;
        --dark-yellow: #feac32;
        --light-pink: #ffadad;
        --dark-red: #850000;
        --light-green: #acd157;
    }

    .project {
        background-color: var(--fcc-blue);
    }

    .custom-calorie-counter {
        font-family: "Lato", Helvetica, Arial, sans-serif;
        font-size: 18px;     
        color: var(--light-grey);
    }

    .custom-calorie-counter h1 {
        text-align: center;
    }

    .container-calorie-counter {
        width: 90%;
        max-width: 680px;
    }

    .custom-calorie-counter h1,
    .container-calorie-counter,
    .output {
        margin: 20px auto;
    }

    .custom-calorie-counter label,
    .custom-calorie-counter legend {
        font-weight: bold;
    }

    .input-container {
        display: flex;
        flex-direction: column;
    }

    .button-project {
        cursor: pointer;
        text-decoration: none;
        background-color: var(--light-yellow);
        border: 2px solid var(--dark-yellow);
        min-height: 24px;
        color: var(--dark-blue);
        margin-bottom: 10px;
    }

    .custom-calorie-counter input,
    .custom-calorie-counter select {
        min-height: 24px;
        color: var(--dark-blue);
    }

    .custom-calorie-counter fieldset,
    .custom-calorie-counter label,
    .custom-calorie-counter input,
    .custom-calorie-counter select {
        margin-bottom: 10px;
    }

    .output {
        border: 2px solid var(--light-grey);
        padding: 10px;
        text-align: center;
    }

    .hide {
        display: none;
    }

    .output span {
        font-weight: bold;
        font-size: 1.2em;
    }

    .surplus {
        color: var(--light-pink);
    }

    .deficit {
        color: var(--light-green);
    }
</style>

<script>
    const calorieCounter = document.getElementById('calorie-counter');
    const budgetNumberInput = document.getElementById('budget');
    const entryDropdown = document.getElementById('entry-dropdown');
    const addEntryButton = document.getElementById('add-entry');
    const clearButton = document.getElementById('clear');
    const output = document.getElementById('output');
    let isError = false;

    function cleanInputString(str) {
        const regex = /[+-\s]/g;
        return str.replace(regex, '');
    }

    function isInvalidInput(str) {
        const regex = /\d+e\d+/i;
        return str.match(regex);
    }

    function addEntry() {
        const targetInputContainer = document.querySelector(`#${entryDropdown.value} .input-container`);
        const entryNumber = targetInputContainer.querySelectorAll('input[type="text"]').length + 1;
        const HTMLString = `
      <label for="${entryDropdown.value}-${entryNumber}-name">Entry ${entryNumber} Name</label>
      <input type="text" id="${entryDropdown.value}-${entryNumber}-name" placeholder="Name" />
      <label for="${entryDropdown.value}-${entryNumber}-calories">Entry ${entryNumber} Calories</label>
      <input
        type="number"
        min="0"
        id="${entryDropdown.value}-${entryNumber}-calories"
        placeholder="Calories"
      />`;
        targetInputContainer.insertAdjacentHTML('beforeend', HTMLString);
    }

    function calculateCalories(e) {
        e.preventDefault();
        isError = false;

        const breakfastNumberInputs = document.querySelectorAll("#breakfast input[type='number']");
        const lunchNumberInputs = document.querySelectorAll("#lunch input[type='number']");
        const dinnerNumberInputs = document.querySelectorAll("#dinner input[type='number']");
        const snacksNumberInputs = document.querySelectorAll("#snacks input[type='number']");
        const exerciseNumberInputs = document.querySelectorAll("#exercise input[type='number']");

        const breakfastCalories = getCaloriesFromInputs(breakfastNumberInputs);
        const lunchCalories = getCaloriesFromInputs(lunchNumberInputs);
        const dinnerCalories = getCaloriesFromInputs(dinnerNumberInputs);
        const snacksCalories = getCaloriesFromInputs(snacksNumberInputs);
        const exerciseCalories = getCaloriesFromInputs(exerciseNumberInputs);
        const budgetCalories = getCaloriesFromInputs([budgetNumberInput]);

        if (isError) {
            return;
        }

        const consumedCalories = breakfastCalories + lunchCalories + dinnerCalories + snacksCalories;
        const remainingCalories = budgetCalories - consumedCalories + exerciseCalories;
        const surplusOrDeficit = remainingCalories < 0 ? 'Surplus' : 'Deficit';
        output.innerHTML = `
      <span class="${surplusOrDeficit.toLowerCase()}">${Math.abs(remainingCalories)} Calorie ${surplusOrDeficit}</span>
      <hr>
      <p>${budgetCalories} Calories Budgeted</p>
      <p>${consumedCalories} Calories Consumed</p>
      <p>${exerciseCalories} Calories Burned</p>
      `;

        output.classList.remove('hide');
    }

    function getCaloriesFromInputs(list) {
        let calories = 0;

        for (const item of list) {
            const currVal = cleanInputString(item.value);
            const invalidInputMatch = isInvalidInput(currVal);

            if (invalidInputMatch) {
                alert(`Invalid Input: ${invalidInputMatch[0]}`);
                isError = true;
                return null;
            }
            calories += Number(currVal);
        }
        return calories;
    }

    function clearForm() {
        const inputContainers = Array.from(document.querySelectorAll('.input-container'));

        for (const container of inputContainers) {
            container.innerHTML = '';
        }

        budgetNumberInput.value = '';
        output.innerText = '';
        output.classList.add('hide');
    }

    addEntryButton.addEventListener("click", addEntry);
    calorieCounter.addEventListener("submit", calculateCalories);
    clearButton.addEventListener("click", clearForm);
</script>