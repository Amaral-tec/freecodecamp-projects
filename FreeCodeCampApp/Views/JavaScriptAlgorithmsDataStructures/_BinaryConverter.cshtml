<link rel="stylesheet" href="~/css/binaryConverter.css" asp-append-version="true" />
<div class="modal-header">
    <h5 class="modal-title" id="projectBinaryConverter">Learn Recursion by Building a Decimal to Binary Converter</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body binary-converter-project">
    <div class="alert alert-info small" role="alert">
        This project works with a decimal to binary converter using JavaScript. You will learn the fundamental concepts of recursion, explore the call stack, and create a visual representation of the recursion process through animation.
        <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#codeExample" aria-expanded="false" aria-controls="codeExample">
            View Code
        </button>
    </div>
    <div class="collapse mt-2" id="codeExample">
        <div class="card card-body bg-light text-monospace">
            <pre><codev>
const numberInput = document.getElementById("number-input");
const convertBtn = document.getElementById("convert-btn");
const result = document.getElementById("result");
const animationContainer = document.getElementById("animation-container");
const animationData = [
  {
    inputVal: 5,
    addElDelay: 1000,
    msg: 'decimalToBinary(5) returns "10" + 1 (5 % 2). Then it pops off the stack.',
    showMsgDelay: 15000,
    removeElDelay: 20000,
  },
  {
    inputVal: 2,
    addElDelay: 1500,
    msg: 'decimalToBinary(2) returns "1" + 0 (2 % 2) and gives that value to the stack below. Then it pops off the stack.',
    showMsgDelay: 10000,
    removeElDelay: 15000,
  },
  {
    inputVal: 1,
    addElDelay: 2000,
    msg: "decimalToBinary(1) returns '1' (base case) and gives that value to the stack below. Then it pops off the stack.",
    showMsgDelay: 5000,
    removeElDelay: 10000,
  }
];

const decimalToBinary = (input) => {
  if (input === 0 || input === 1) {
    return String(input);
  } else {
    return decimalToBinary(Math.floor(input / 2)) + (input % 2);
  }
};

const showAnimation = () => {
  result.innerText = "Call Stack Animation";

  animationData.forEach((obj) => {
    setTimeout(() => {
      animationContainer.innerHTML += `
            <p id="${obj.inputVal}" class="animation-frame">
          decimalToBinary(${obj.inputVal})
        </p>
      `;
    }, obj.addElDelay);

    setTimeout(() => {
      document.getElementById(obj.inputVal).textContent = obj.msg;
    }, obj.showMsgDelay);

    setTimeout(() => {
      document.getElementById(obj.inputVal).remove();
    }, obj.removeElDelay);
  });

  setTimeout(() => {
    result.textContent = decimalToBinary(5);
  }, 20000);
};

const checkUserInput = () => {
  const inputInt = parseInt(numberInput.value);

  if (!numberInput.value || isNaN(inputInt) || inputInt < 0) {
    alert("Please provide a decimal number greater than or equal to 0");
    return;
  }

  if (inputInt === 5) {
    showAnimation();
    return;
  }

  result.textContent = decimalToBinary(inputInt);
  numberInput.value = "";
};

convertBtn.addEventListener("click", checkUserInput);

numberInput.addEventListener("keydown", (e) => {
  if (e.key === "Enter") {
    checkUserInput();
  }
});
            </codev></pre>
        </div>
    </div>
    <div class="custom-binary-converter">
        <h1>
            Decimal to Binary <br />
            Converter
        </h1>
        <div class="input-container">
            <label for="number-input">Enter a decimal number:</label>
            <input value=""
                   type="number"
                   name="decimal number input"
                   id="number-input"
                   class="number-input" />
            <button class="convert-btn" id="convert-btn">Convert</button>
        </div>
        <div class="output-container">
            <output id="result" for="number-input"></output>
            <h2>Call stack</h2>
            <div id="animation-container"></div>
        </div>
    </div>
</div>

<script src="~/js/binaryConverter.js" asp-append-version="true"></script>
